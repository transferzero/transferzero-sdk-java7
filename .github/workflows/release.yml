name: Publish Package to Mvn
on:
  push:
    branches:
      - BTA-11168-ci-cd-action
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: "-Xms64M -Xmx1600M -Dhttp.keepAlive=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=15 -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.rto=15000"

    steps:

    - uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8
        cache: 'maven'

    # - name: fetch gpg
    #   run: |
    #     echo "${{ secrets.GPG_PVT }}" > mvn_private_key.asc
    #     echo "${{ secrets.GPG_PUB }}" > mvn_public_key.asc
    #     ls

    - name: Build
      env:
        GPG_PVT: ${{ secrets.GPG_PVT }}
        GPG_PUB: ${{ vars.GPG_PUB }}
        REPO_TOKEN: ${{ secrets.OSSRH_TOKEN }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        SONATYPE_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      run: |
          export GPG_TTY=$(tty)
          echo "${{ secrets.GPG_PVT }}" > mvn_private_key.asc
          echo "${{ vars.GPG_PUB }}" > mvn_public_key.asc
          gpg2 --batch --import mvn_private_key.asc
          gpg --batch --import mvn_public_key.asc
          mvn release:prepare -Dresume=false -Prelease
          mvn release:perform -Prelease

# name: Publish Package to Maven
# on:
#   push:
#     branches:
#       - BTA-11168-ci-cd-action
#       - master
#   workflow_dispatch:

# jobs:
#   release-transferzero-javascript-sdk:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Set up Maven Central Repository
#         uses: actions/setup-java@v3
#         with:
#           java-version: '8'
#           distribution: 'adopt'
#           server-id: ossrh
#           server-username: ${{ secrets.MAVEN_USERNAME }}
#           server-password: ${{ secrets.MAVEN_PASSWORD }}
  
#       - name: Publish Maven package
#         run: mvn --batch-mode deploy
#         env:
#           MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
#           MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

#       # - name: Tag the release
#       #   run: |
#       #     NEXT_TAG=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' package.json)
#       #     git tag $NEXT_TAG
#       #     git push --tags
